@using MudBlazor
@using OrderDeliverySystem.Client.Shared
@using OrderDeliverySystem.Client.Pages.Customer
@using OrderDeliverySystem.Components
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Authorization
@using OrderDeliverySystem.Client.Infrastructure.Services.Authentication

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IHttpClientFactory HttpClientFactory
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject IAuthService AuthService
@rendermode InteractiveServer


@if (_role == "Customer" || _role == "Guest")
{
    <MudLink Href="/"><MudImage Src="images/logo.png" Width="120" Height="80" Alt="Swedish Farm House" Href="/" Class="rounded-lg m-4" /></MudLink>

    <MudSpacer />
    <MudButtonGroup Color="Color.Dark" Variant="Variant.Text">
        <MudButton Href="/restaurants">Restaurants</MudButton>
        <MudButton Href="/about-us">About Us</MudButton>
        <MudButton Href="/contact">Contact</MudButton>
       

        @if (isUser)
        {
            <MudButton Href="/my-orders">My Orders</MudButton>
        }
        else
        {
            <MudButton Href="/register">Sign Up</MudButton>
        }

    </MudButtonGroup>
    <MudSpacer />
   
    @if (isUser)
    {

        <MudIconButton OnClick="OnExpandCartClick" Icon="@Icons.Material.Filled.AddShoppingCart" Style="color: rgba(168, 0, 0, 1);">@(_cartExpanded ?"" : "")</MudIconButton>
        <MudIconButton Href="/customer-profile" Icon="@Icons.Material.Filled.PersonOutline" Style="color: rgba(168, 0, 0, 1);" />

        <MudFab Style="color: rgba(168, 0, 0, 1);" Label="Log Out" OnClick="LogOut" />
       
    }
    else
    {
        <MudFab StartIcon="@Icons.Material.Filled.PersonOutline" Style="color: rgba(168, 0, 0, 1);" Label="Login" OnClick="LogIn" />
    }

}
else
{
    <MudButton Href="/"><MudImage Src="images/logo.png" Width="120" Height="80" Alt="Swedish Farm House" Href="/dashboard" Class="rounded-lg m-4" /></MudButton>

    <MudSpacer />
    @if (isUser)
    {
        <MudFab StartIcon="@Icons.Material.Filled.PersonOutline" Style="color: rgba(168, 0, 0, 1);" Label="Log Out" OnClick="LogOut" />

    }
    else
    {
        <MudFab StartIcon="@Icons.Material.Filled.PersonOutline" Style="color: rgba(168, 0, 0, 1);" Label="Login" Href="/login" />

    }
    
}


    <MudCollapse Expanded="_cartExpanded" >
        @if (_cartExpanded)
        {
        <Cart OnClose="CloseCart" />
        }
    </MudCollapse>




@code{
    bool isUser = true;
    //string _role = "Admin";
    //string _role = "Merchant";
    //string _role = "Guest";
    string _role = "Customer";
    // string _role = "Worker";


    @*private bool isAdmin;
    private bool isCustomer;
    private bool isMerchant;
    private bool isDeliveryWorker;
    private bool isGuest;
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        isAdmin = user.IsInRole("Admin");
        isCustomer = user.IsInRole("Customer");
        isMerchant = user.IsInRole("Merchant");
        isDeliveryWorker = user.IsInRole("DeliveryWorker");
        isGuest = (!isAdmin || !isCustomer || !isMerchant || !isDeliveryWorker);
    }*@

    bool _cartExpanded = false;


    private void OnExpandCartClick()
    {
        _cartExpanded = !_cartExpanded;
    }

    private void CloseCart()
    {
        _cartExpanded = false; 
    }
    public async Task LogOut()
    {
        CloseCart();
        await this.AuthService.Logout();
    }
    public async Task LogIn()
    {
        NavigationManager.NavigateTo("/login");
    }

   

    
}