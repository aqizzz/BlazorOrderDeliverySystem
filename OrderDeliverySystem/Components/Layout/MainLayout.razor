@using MudBlazor
@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using OrderDeliverySystem.Client.Infrastructure.Services.Authentication
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@inject NavigationManager Navigation

<MudThemeProvider/>
<MudPopoverProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>


<MudLayout>
    <MudHidden Class="my-10" Breakpoint="Breakpoint.MdAndUp" Invert="true">
         <MudAppBar Height="Auto" Class="p-3 bg-white">
        <NavMenu />
        </MudAppBar>
    </MudHidden>
   
        
    <MudHidden Class="my-10" Breakpoint="Breakpoint.SmAndDown" Invert="true">
        <MudAppBar Elevation="1" Dense="@_dense" Height="Auto" Class="p-3 bg-white">
            <AuthorizeView Roles="Admin,Merchant,Worker">
                <Authorized>
                    <MudLink Href="/"><MudImage Src="images/logo.png" Width="120" Height="80" Alt="Swedish Farm House" Href="/dashboard" Class="rounded-lg m-4" /></MudLink>
                </Authorized>
               <NotAuthorized>
                    <MudLink Href="/"><MudImage Src="images/logo.png" Width="120" Height="80" Alt="Swedish Farm House" Href="/" Class="rounded-lg m-4" /></MudLink>
                </NotAuthorized>
            </AuthorizeView>
            <MudSpacer />
            <MudIconButton Icon="@Icons.Material.Filled.Menu"  Edge="Edge.End" OnClick="@ToggleDrawer" Style="color: rgba(168, 0, 0, 1);" />

           
        </MudAppBar>
        <MudDrawer @bind-Open="@_open" Anchor="Anchor.Top" Elevation="1" Variant="@DrawerVariant.Temporary" OverlayAutoClose="true">
            <MudDrawerHeader Class=" d-flex justify-content-between align-items-center">
                <AuthorizeView Roles="Admin,Merchant,Worker">
                    <Authorized>
                        <MudLink Href="/"><MudImage Src="images/logo.png" Width="70" Height="40" Alt="Swedish Farm House" Href="/dashboard" Class="rounded-lg m-4" /></MudLink>
                       
                    </Authorized>
                    <NotAuthorized>
                        <MudLink Href="/"><MudImage Src="images/logo.png" Width="70" Height="40" Alt="Swedish Farm House" Href="/" Class="rounded-lg m-4" /></MudLink>
                    </NotAuthorized>
                </AuthorizeView>
       
                <MudSpacer />
                <AuthorizeView Roles="Admin">
                    <Authorized>
                        <MudNavLink Class="text-right" Href="/password" Icon="@Icons.Material.Filled.PersonOutline"></MudNavLink>
                    </Authorized>
                </AuthorizeView>
                <AuthorizeView Roles="Merchant">
                    <Authorized>
                        <MudNavLink Href="/merchant-profile" Icon="@Icons.Material.Filled.PersonOutline"></MudNavLink>
                    </Authorized>
                </AuthorizeView>

                <AuthorizeView Roles="Worker">
                    <Authorized>
                        <MudNavLink Href="/worker-profile" Icon="@Icons.Material.Filled.PersonOutline"></MudNavLink>
                    </Authorized>
                </AuthorizeView>

                <AuthorizeView Roles="Customer">
                    <Authorized>
                        <MudNavLink Href="/worker-profile" Icon="@Icons.Material.Filled.PersonOutline"></MudNavLink>
                    </Authorized>
                </AuthorizeView>
              
            </MudDrawerHeader>
            <MudNavMenu>
                <AuthorizeView Roles="Admin">
                    <Authorized>
                        <MudNavLink Href="/user-management" Icon="@Icons.Material.Filled.Dashboard">User Management</MudNavLink>
                        <MudNavLink Href="/reviewlist" Icon="@Icons.Material.Filled.Dashboard">Review  Management</MudNavLink>
                    </Authorized>
                </AuthorizeView>

                <AuthorizeView Roles="Merchant">
                    <Authorized>
                        <MudNavLink Href="/merchant-items" Icon="@Icons.Material.Filled.Dashboard">Product Management</MudNavLink>
                        <MudNavLink Href="/merchant-orders" Icon="@Icons.Material.Filled.Dashboard">Order Management</MudNavLink>
                        <MudNavLink Href="/merchant-reviews" Icon="@Icons.Material.Filled.Dashboard">Review Management</MudNavLink>
                    </Authorized>
                </AuthorizeView>

                <AuthorizeView Roles="Worker">
                    <Authorized>
                        <MudNavLink Href="/worker-recent" Icon="@Icons.Material.Filled.Dashboard">Recent Order</MudNavLink>
                        <MudNavLink Href="/worker-history-orders" Icon="@Icons.Material.Filled.Dashboard">Histiry Order</MudNavLink>
                    </Authorized>
                </AuthorizeView>
                <AuthorizeView Roles="Admin,Merchant,Worker">
                    <NotAuthorized>
                        <MudNavLink Href="/restaurants" Icon="@Icons.Material.Filled.Dashboard">Restaurants</MudNavLink>
                        <MudNavLink Href="/about-us" Icon="@Icons.Material.Filled.Dashboard">About Us</MudNavLink>
                        <MudNavLink Href="/contact" Icon="@Icons.Material.Filled.Dashboard">Contact</MudNavLink>
                    </NotAuthorized>
                </AuthorizeView>
                <AuthorizeView Roles="Customer">
                    <Authorized>
                        <MudNavLink Href="/my-orders" Icon="@Icons.Material.Filled.Receipt">My Orders</MudNavLink>
                    </Authorized>
                </AuthorizeView>

                <AuthorizeView >
                    <Authorized>
                        <MudNavLink Href="/password" Icon="@Icons.Material.Filled.LockReset">Password Reset</MudNavLink>
                        <MudNavLink StartIcon="@Icons.Material.Filled.PersonOutline" Style="color: rgba(168, 0, 0, 1);" Label="Log Out" OnClick="LogOut">Log Out</MudNavLink>
                    </Authorized>
                    <NotAuthorized>
                        <MudNavLink Href="/register" Icon="@Icons.Material.Filled.Dashboard">Sign Up</MudNavLink>
                        <MudNavLink StartIcon="@Icons.Material.Filled.PersonOutline" Style="color: rgba(168, 0, 0, 1);" Label="Login" OnClick="LogIn">Log In</MudNavLink>
                    </NotAuthorized>
                </AuthorizeView>

            </MudNavMenu>
        </MudDrawer>
    </MudHidden>

    <AuthorizeView Roles="Admin,Merchant,Worker">
 

       <Authorized>
            <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2" Style="min-height:400px;max-height:650px;">
                <LeftNavBar />
            </MudDrawer>
          
       </Authorized>
 
    </AuthorizeView>
    <MudMainContent Class="my-1" Style="min-height:700px;">

        @Body
        
    </MudMainContent>
   
          
    <MudPaper Bottom="true" Class="mt-4 bg-light p-5">

        <Footer />
    </MudPaper>
   
    <div id="blazor-error-ui">
        An unhandled error has occurred.
        <a href="" class="reload">Reload</a>
        <a class="dismiss">ðŸ—™</a>
    </div>

    
</MudLayout>

@code {

     [Inject]
    private IAuthService AuthService { get; set; }
    protected override async Task OnInitializedAsync()
    {
      
        await base.OnInitializedAsync();
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

    }
    private bool _open = false;
    private bool _dense = false;
    private DrawerClipMode _clipMode = DrawerClipMode.Never;

    private void ToggleDrawer()
    {
        _open = !_open;
    }
    bool _drawerOpen = true;
    
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    Color Color = Color.Success;
    private void OnScroll(ScrollEventArgs e)
    {
        Color = (e.FirstChildBoundingClientRect.Top * -1) switch
        {
            var x when x < 500 => Color.Primary,
            var x when x < 1500 => Color.Secondary,
            var x when x < 2500 => Color.Tertiary,
            _ => Color.Error
        };
    }


    public async Task LogOut()
    {
        if (AuthService != null)
        {
            await AuthService.Logout();
            Navigation.NavigateTo("/", forceLoad: true);
            StateHasChanged();
        }
        NavigationManager.NavigateTo("/");
    }
    public async Task LogIn()
    {

        Navigation.NavigateTo("/login",forceLoad:true);

    }

}
