@using MudBlazor
@using OrderDeliverySystem.Share.DTOs
@using System.ComponentModel.DataAnnotations
@inject IHttpClientFactory HttpClientFactory
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@rendermode InteractiveServer


<MudGrid>
    <MudItem xs="12" sm="12" md="12" Class="d-flex justify-content-between align-items-center border-b-4 border-solid" Style="border-color:rgba(112, 0, 0, 1);">
        <MudText Class="pt-4" Typo="Typo.h6" Align="Align.Center" GutterBottom="true">OrderId: @Order.OrderId</MudText>
        <MudButton OnClick="OnExpandCollapseClick" >@(_expanded ? "Details" : "Details")</MudButton>
    </MudItem>

    <MudItem xs="12" sm="12" md="2">
        <MudText Class="pt-4" Typo="Typo.h6" Align="Align.Center" GutterBottom="true">Picture</MudText>
    </MudItem>
    <MudItem xs="12" sm="12" md="3">
        <MudGrid>
            <MudItem xs="12">
                <MudText Class="pb-2" Typo="Typo.h5">@Order.Merchant.BusinessName</MudText>
                <div Class="pb-2">
                <MudIcon Class="d-inline-block" Icon="@Icons.Material.Outlined.AccessTime"></MudIcon>
                <MudText Class="d-inline-block" Typo="Typo.body2">Time: @Order.Merchant.PreparingTime mins</MudText>
                </div>
                <div Class="pb-2">
                <MudIcon Class="d-inline-block" Icon="@Icons.Material.Outlined.LocationOn"></MudIcon>
                    @foreach (var address in Order.Merchant.User.Addresses)
                    {
                        <MudText Class="d-inline-block" Typo="Typo.body2">
                            Address:  @((@address.Unit != "" ? @address.Unit + ", " : "") +
                        (@address.Address != "" ? @address.Address + ", " : "") +
                        (@address.City != "" ? @address.City + ", " : "") +
                        (@address.Province != "" ? @address.Province + ", " : "") +
                        (@address.Postcode ?? ""))
                        </MudText>
                    }
                </div>
            </MudItem>
        </MudGrid>
    </MudItem>
    <MudItem xs="12" sm="12" md="5" Class="d-flex justify-content-center align-item-center"  GutterBottom="true">
       <div>
        <MudText Typo="Typo.body1" Align="Align.Center" >Order Time: @Order.CreatedAt.ToString("MM/dd/yy hh:mm tt")</MudText>
        <MudText Typo="Typo.body1" Align="Align.Center" >Arrival time: 09/14/2024 19:25</MudText>
        <MudText Typo="Typo.body1" Align="Align.Center" >Status: @Order.Status</MudText>
        <MudLink OnClick="GoTracking"> <MudText Typo="Typo.body1" Align="Align.Center" >Delivery Tracking-></MudText></MudLink>
        </div>
    </MudItem>
    <MudItem xs="12" sm="12" md="2">
        <MudText Class="pt-4" Typo="Typo.h6" Align="Align.Center" GutterBottom="true">Amount: $@Order.TotalAmount</MudText>
    </MudItem>

    <MudItem xs="12" sm="12" md="12">
        <MudCollapse Expanded="_expanded">
            <MudDivider Class="border-t-2 border-solid mt-4" Style="border-color:rgba(112, 0, 0, 1);"></MudDivider>
            <MudGrid>
                <MudItem xs="12" sm="12" md="9">
                    @if (Order.OrderItems!= null)
                    {
                        foreach (var theitem in Order.OrderItems)
                        {
                            <div class="d-flex justify-content-around align-items-center">
                                @*<MudImage Src="@theitem.ItemPic" Width="60" Height="35" Alt="@merchant.FirstName" Class="rounded-lg mt-4" />*@
                                <MudText>@theitem.ItemName</MudText>
                                <MudText> @theitem.ItemPrice</MudText>
                                <MudText>@theitem.Quantity</MudText>
                            </div>
                        }
                    }
                </MudItem>
                <MudItem xs="12" sm="12" md="3">
                    <MudText Class="pt-4 ps-6" Typo="Typo.body2" Align="Align.Start" GutterBottom="true">Total(Before tax):  $@Order.TotalAmount</MudText>
                    <MudText Class="pt-4 ps-6" Typo="Typo.body2" Align="Align.Start" GutterBottom="true">Tax (15%):  @GetTaxAmount().ToString("C")</MudText>
                    <MudText Class="pt-4 ps-6" Typo="Typo.body2" Align="Align.Start" GutterBottom="true">Total(After tax):  @GetTotalAfterTax().ToString("C")</MudText>
                    <MudText Class="pt-4 ps-6 border-b-2 border-solid mb-2" Typo="Typo.body2" Align="Align.Start" GutterBottom="true" Style="border-color:rgba(112, 0, 0, 1);">Delivery Fee:  $6 ( $3/ km )</MudText>
                    <MudText Class="pt-4 ps-6" Typo="Typo.subtitle2" Align="Align.Start" GutterBottom="true">Total Amount:  @GetTotalAmount().ToString("C")</MudText>
                </MudItem>
            </MudGrid>
        </MudCollapse>
            
      
    </MudItem>

    <MudItem xs="12" sm="12" md="12" Class="d-flex justify-content-between align-items-center border-t-4 border-solid mt-4" Style="border-color:rgba(112, 0, 0, 1);">

    </MudItem>

</MudGrid>


@code {
    [Parameter]
    public OrderDTO Order{ get; set; }

    private const decimal TaxRate = 0.15m;
    private const decimal DeliveryFee = 6.00m;
    protected override void OnInitialized()
    {
        
        Console.WriteLine($"Selected restaurant ID: {Order.OrderId}");
    }

    bool _expanded = false;

    private void OnExpandCollapseClick()
    {
        _expanded = !_expanded;
    }

    private void GoTracking()
    {
        NavigationManager.NavigateTo($"/tracking/{Order.OrderId}");
       
    }

    private decimal GetTaxAmount()
    {
        return Order.TotalAmount * TaxRate;
    }
    private decimal GetTotalAfterTax()
    {
        return Order.TotalAmount + GetTaxAmount();
    }
    private decimal GetTotalAmount()
    {
        return GetTotalAfterTax() + DeliveryFee;
    }
}
