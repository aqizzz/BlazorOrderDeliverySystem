@page "/customer-profile"
@attribute [Authorize]
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization;
@using MudBlazor
@using Newtonsoft.Json
@using OrderDeliverySystem.Share.DTOs
@using OrderDeliverySystem.Client.Shared.Common
@using System.Security.Claims
@using OrderDeliverySystem.Client.Infrastructure.Services.Profile
@using System.Text.Json
@inject IHttpClientFactory httpClientFactory
@inject NavigationManager NavigationManager
@inject IProfileService ProfileService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime JSRuntime
@inject IAuthorizationService AuthorizationService
@rendermode InteractiveAuto



 <MudContainer Class="my-10 d-flex justify-content-center align-content-center" MaxWidth="MaxWidth.ExtraLarge" Style="min-height:620px">
@if (isLoading)
{
    <p>Loading profile...</p>
}
else if (model != null)
    {
     <MudPaper Class="pa-16 ma-2" Elevation="3" Width="60%">
        <div Style="display:none;">
            <MudField id="userId" Text="@model.UserId" />
        </div>
        <div class=" d-flex justify-content-between align-content-center">
            <MudText Class="py-4" Typo="Typo.h4" Align="Align.Start" GutterBottom="false">My profile</MudText>
            <MudButton Href="/customer-profile/edit" Style="color:rgba(112, 0, 0, 1);">Edit Profile</MudButton>
        </div>
        <MudDivider Style="color:rgba(112, 0, 0, 1);border-color:rgba(112, 0, 0, 1);border-width:3px;" />
        <MudGrid xs="12" lg="12">
             <MudItem xs="12">
                          <MudGrid>
                <MudItem xs="2">
                        <MudField Label="Firstname:" AlignLabel="Align.Start" Underline="false" />
                </MudItem>
                <MudItem xs="8">
                        <MudField Underline="false" Margin="Margin.None" Style="margin-top: 16px;">
                            <MudText >@model.FirstName</MudText>
                    </MudField>
                </MudItem>
                <MudItem xs="2">
                </MudItem>

                <MudItem xs="2">
                    <MudField Label="Lastname:" AlignLabel="Align.Start" Underline="false" />
                </MudItem>
                <MudItem xs="8">
                        <MudField Underline="false" Margin="Margin.None" Style="margin-top: 16px;">
                            <MudText >@model.LastName</MudText>
                    </MudField>
                </MudItem>
                <MudItem xs="2">
                </MudItem>

                <MudItem xs="2">
                    <MudField Label="Email:" AlignLabel="Align.Start" Underline="false" />
                </MudItem>
                <MudItem xs="8">
                        <MudField Underline="false" Margin="Margin.None" Style="margin-top: 16px;">
                            <MudText >@model.Email</MudText>
                    </MudField>
                </MudItem>
                <MudItem xs="2">
                </MudItem>

                <MudItem xs="2">
                    <MudField Label="Phone:" AlignLabel="Align.Start" Underline="false" />
                </MudItem>
                <MudItem xs="8">
                        <MudField Underline="false" Margin="Margin.None" Style="margin-top: 16px;">
                            <MudText >@model.Phone</MudText>
                    </MudField>
                </MudItem>
                <MudItem xs="2">
                </MudItem>

                <MudItem xs="2">
                    <MudField Label="Unit:" AlignLabel="Align.Start" Underline="false" />
                </MudItem>
                <MudItem xs="8">
                        <MudField Underline="false" Margin="Margin.None" Style="margin-top: 16px;">
                            <MudText >@model.Unit</MudText>
                    </MudField>
                </MudItem>
                <MudItem xs="2">
                </MudItem>

                <MudItem xs="2">
                    <MudField Label="Address:" AlignLabel="Align.Start" Underline="false" />
                </MudItem>
                <MudItem xs="8">
                        <MudField Underline="false" Margin="Margin.None" Style="margin-top: 16px;">
                            <MudText>@model.Address</MudText>
                    </MudField>
                </MudItem>
                <MudItem xs="2">
                </MudItem>

                <MudItem xs="2">
                    <MudField Label="City:" AlignLabel="Align.Start" Underline="false" />
                </MudItem>
                <MudItem xs="8">
                        <MudField Underline="false" Margin="Margin.None" Style="margin-top: 16px;">
                            <MudText >@model.City</MudText>
                    </MudField>
                </MudItem>
                <MudItem xs="2">
                </MudItem>

                <MudItem xs="2">
                    <MudField Label="Province:" AlignLabel="Align.Start" Underline="false" />
                </MudItem>
                <MudItem xs="8">
                        <MudField Underline="false" Margin="Margin.None" Style="margin-top: 16px;">
                            <MudText>@model.Province</MudText>
                    </MudField>
                </MudItem>
                <MudItem xs="2">
                </MudItem>

                <MudItem xs="2">
                    <MudField Label="Postcode:" AlignLabel="Align.Start" Underline="false" />
                </MudItem>
                <MudItem xs="8">
                        <MudField Underline="false" Margin="Margin.None" Style="margin-top: 16px;">
                            <MudText>@model.Postcode</MudText>
                    </MudField>
                </MudItem>
            </MudGrid>
         </MudItem>
        <MudItem xs="12">
        </MudItem>
    </MudGrid>
    
    </MudPaper>

    }
</MudContainer>
@code {
    private ClaimsPrincipal user;
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    [Parameter]
    public int UserId { get; set; }

    private UserProfileDTO model = new(); // Ensure model is initialized

    public bool ShowErrors { get; set; } = false;
    public IEnumerable<string> Errors { get; set; } = new List<string>();

    private bool isLoading = true;

    private async Task LoadUserProfile()
    {
        if (authenticationState is not null)
        {
            if (user is not null)
            {
                if (user.IsInRole("Admin"))
                {
                    model = await ProfileService.GetCustomerProfile(UserId);

                }
                else if (user.IsInRole("Customer"))
                {
                    model = await ProfileService.GetCustomerProfile();

                }
                isLoading = false;
                StateHasChanged();
            }
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        user = authState.User;
        await LoadUserProfile();
    }
}
