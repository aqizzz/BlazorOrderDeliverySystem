@page "/worker-profile"

@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization;
@using MudBlazor
@using Newtonsoft.Json
@using OrderDeliverySystem.Share.DTOs
@using OrderDeliverySystem.Client.Shared.Common
@using System.Security.Claims
@using OrderDeliverySystem.Client.Infrastructure.Services.Profile
@using System.Text.Json
@inject IHttpClientFactory httpClientFactory
@inject NavigationManager NavigationManager
@inject IProfileService ProfileService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime JSRuntime
@rendermode InteractiveAuto
<br>
<br />
<br />
<br />
@if (isLoading)
{
    <p>Loading profile...</p>
}
else if (model != null)
{
    <MudContainer>
        <div Style="display:none;">
            <MudField id="userId" Text="@model.UserId" />
        </div>
        <MudGrid>
            <MudItem xs="2">
                <MudField Label="Firstname:" AlignLabel="Align.Start" Underline="false" />
            </MudItem>
            <MudItem xs="8">
                <MudField Underline="false" Margin="Margin.None" Style="margin-top: 16px;">
                    <MudText>@model.FirstName</MudText>
                </MudField>
            </MudItem>
            <MudItem xs="2"></MudItem>

            <MudItem xs="2">
                <MudField Label="Lastname:" AlignLabel="Align.Start" Underline="false" />
            </MudItem>
            <MudItem xs="8">
                <MudField Underline="false" Margin="Margin.None" Style="margin-top: 16px;">
                    <MudText>@model.LastName</MudText>
                </MudField>
            </MudItem>
            <MudItem xs="2"></MudItem>

            <MudItem xs="2">
                <MudField Label="Email:" AlignLabel="Align.Start" Underline="false" />
            </MudItem>
            <MudItem xs="8">
                <MudField Underline="false" Margin="Margin.None" Style="margin-top: 16px;">
                    <MudText>@model.Email</MudText>
                </MudField>
            </MudItem>
            <MudItem xs="2"></MudItem>

            <MudItem xs="2">
                <MudField Label="Phone:" AlignLabel="Align.Start" Underline="false" />
            </MudItem>
            <MudItem xs="8">
                <MudField Underline="false" Margin="Margin.None" Style="margin-top: 16px;">
                    <MudText>@model.Phone</MudText>
                </MudField>
            </MudItem>
            <MudItem xs="2"></MudItem>

            <MudItem xs="2">
                <MudField Label="Unit:" AlignLabel="Align.Start" Underline="false" />
            </MudItem>
            <MudItem xs="8">
                <MudField Underline="false" Margin="Margin.None" Style="margin-top: 16px;">
                    <MudText>@model.Unit</MudText>
                </MudField>
            </MudItem>
            <MudItem xs="2"></MudItem>

            <MudItem xs="2">
                <MudField Label="Availability:" AlignLabel="Align.Start" Underline="false" />
            </MudItem>
            <MudItem xs="8">
                <MudField Underline="false" Margin="Margin.None" Style="margin-top: 16px;">
                    <MudText>@(model.WorkerAvailability ? "Available" : "Not Available")</MudText>
                </MudField>
            </MudItem>
            <MudItem xs="2"></MudItem>

            <MudItem xs="2">
                <MudField Label="Commission Rate:" AlignLabel="Align.Start" Underline="false" />
            </MudItem>
            <MudItem xs="8">
                <MudField Underline="false" Margin="Margin.None" Style="margin-top: 16px;">
                    <MudText>@model.CommissionRate?.ToString("F2")</MudText>
                </MudField>
            </MudItem>
            <MudItem xs="2"></MudItem>

            <MudItem xs="2">
                <MudField Label="Last Task Assigned:" AlignLabel="Align.Start" Underline="false" />
            </MudItem>
            <MudItem xs="8">
                <MudField Underline="false" Margin="Margin.None" Style="margin-top: 16px;">
                    <MudText>@(model.LastTaskAssigned?.ToString("g") ?? "N/A")</MudText>
                </MudField>
            </MudItem>
            <MudItem xs="2"></MudItem>
        </MudGrid>
    </MudContainer>
}
@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }

    private WorkerProfileDTO model = new WorkerProfileDTO { WorkerAvailability = false };

    private ClaimsPrincipal user;

    [Parameter]
    public int UserId { get; set; }

    public bool ShowErrors { get; set; } = false;
    public IEnumerable<string> Errors { get; set; } = new List<string>();

    private int userId = 2; // Adjust as necessary
    private bool isLoading = true;

    private async Task LoadWorkerProfile()
    {
        try
        {
            if (authenticationState is not null)
            {
                if (user is not null)
                {
                    if (user.IsInRole("Admin"))
                    {
                        model = await ProfileService.GetWorkerProfile(UserId);

                    }
                    else if (user.IsInRole("Worker"))
                    {
                        model = await ProfileService.GetWorkerProfile();

                    }
                    isLoading = false;
                    StateHasChanged();
                }
            }
        }
        catch (Exception ex)
        {
            await LogToBrowserConsole($"Error loading: {ex.Message}");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await authenticationState;
        user = authState.User;
        await LoadWorkerProfile();
    }

    private async Task LogToBrowserConsole(string message) => await JSRuntime.InvokeVoidAsync("console.log", message);
}