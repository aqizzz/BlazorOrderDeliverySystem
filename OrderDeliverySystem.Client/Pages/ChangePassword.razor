@page "/password"
@attribute [Authorize]
@using OrderDeliverySystem.Share.DTOs
@using Microsoft.AspNetCore.Authorization;
@using OrderDeliverySystem.Client.Infrastructure.Services.Authentication
@using OrderDeliverySystem.Client.Shared.Common
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@rendermode InteractiveAuto

<section class="section-content padding-y bg">
    <div class="container">

    @* Display message to user if it's not empty *@
    @if (!string.IsNullOrEmpty(message))
    {
        <div class="alert @alertClass" role="alert">
            @message
        </div>
    }

        <div class="row">

            @*<AccountSidebar />*@

            <main class="col-md-9">

                <article class="card mb-3">
                    <div class="card-body">

                        <h4 class="card-title mb-4">Change Password</h4>
                        <EditForm Model="model" OnValidSubmit="SubmitAsync">

                            <ErrorsList ShowErrors="ShowErrors" Errors="Errors" />
                            <DataAnnotationsValidator />

                            <div class="form-group row">
                                <label class="col-sm-3 col-form-label">Current password</label>
                                <div class="col-sm-6">
                                    <InputText @bind-Value="model.Password" class="form-control" type="password" />
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-3 col-form-label">New password</label>
                                <div class="col-sm-6">
                                    <InputText @bind-Value="model.NewPassword" class="form-control" type="password" />
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-3 col-form-label">Confirm new password</label>
                                <div class="col-sm-6">
                                    <InputText @bind-Value="model.ConfirmNewPassword" class="form-control" type="password" />
                                </div>
                            </div>

                            <button type="submit" class="btn btn-primary"> Save changes </button>
                        </EditForm>

                    </div>
                </article>

            </main>
        </div>

    </div>
</section>
@code {
    private readonly ChangePasswordRequestDto model = new ChangePasswordRequestDto();

    public bool ShowErrors { get; set; } = false;

    public IEnumerable<string> Errors { get; set; } = new List<string>();

    private string message { get; set; } = string.Empty;
    private string alertClass { get; set; } = string.Empty;
    private bool showAlert { get; set; } = false;

    private async Task SubmitAsync()
    {
        var result = await this.AuthService.ChangePassword(this.model);

        if (result.Succeeded)
        {

            this.ShowErrors = false;

            this.message = "Your password has been changed successfully.";
            this.alertClass = "alert-success";
            this.showAlert = true;

            // Force UI update
            await InvokeAsync(StateHasChanged);

            // Wait for 2 seconds to show success message
            await Task.Delay(2000);

            this.NavigationManager.NavigateTo("/login");
        }
        else
        {
            this.Errors = result.Errors;
            this.ShowErrors = true;
        }
    }
}
}